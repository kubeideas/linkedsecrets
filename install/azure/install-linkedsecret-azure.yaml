apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: linkedsecrets-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: linkedsecrets.security.kubeideas.io
spec:
  group: security.kubeideas.io
  names:
    kind: LinkedSecret
    listKind: LinkedSecretList
    plural: linkedsecrets
    shortNames:
    - lns
    singular: linkedsecret
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.currentProvider
      name: provider
      type: string
    - jsonPath: .status.createdSecretStatus
      name: status
      type: string
    - jsonPath: .status.createdSecret
      name: secret
      type: string
    - jsonPath: .status.keepSecretOnDelete
      name: keep-on-delete
      type: boolean
    - jsonPath: .status.lastScheduleExecution
      name: last-sync
      type: string
    - jsonPath: .status.cronJobStatus
      name: cron-job-status
      type: string
    - jsonPath: .status.currentSchedule
      name: current-schedule
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: LinkedSecret is the Schema for the linkedsecrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LinkedSecretSpec defines the desired state of LinkedSecret
            properties:
              deployment:
                description: Deployment name which pods will be restarted if secret data key or value were changed. Pods rollout update will happen 5 seconds after secret was updated.
                type: string
              keepSecretOnDelete:
                description: 'Use this field keep secret after LinkedSecret deletion. Valid values: {true, false}'
                type: boolean
              provider:
                description: 'Supported cloud secret manager. Valid options: Google,AWS,Azure,IBM.'
                enum:
                - Google
                - AWS
                - Azure
                - IBM
                type: string
              providerDataFormat:
                description: 'Supported formats: PLAIN and JSON "PLAIN" format key/value must be delimited by character "=". Empty lines, key without value and value without key will be skipped. Leading and trailing whitespaces will be ignored. Ex: password=pass12@#=+$% or password = pass12@#=+$% (with whitespaces). "JSON" format must be key/value format. Ex: {"pasword":"pass12@#=+$%","host":"myhost"}.'
                enum:
                - PLAIN
                - JSON
                type: string
              providerOptions:
                additionalProperties:
                  type: string
                description: 'Extra options necessary to fetch Cloud secret. If version is omitted, secret latest version will be used regardeless of Cloud provider. Example GCP: project: <PROJECT-ID>, secret: <GCP-SECRET-NAME>, version: <latest|"1"|"2"|...>. Example AWS: region: <AWS-REGION>, secret: <AWS-SECRET-NAME>, version: <AWSPREVIOUS|AWSCURRENT>. Example Azure: keyvault: <KEYVAULT-NAME>, secret: <AZURE-SECRET-NAME>, version: <AZURE-SECRET-VERSION-ID>. Example IBM: secretManagerInstanceId: <SECRET-MANAGER-INSTANCE-UUID> , secretId: <IBM-SECRET-UUID>, region: <IBM-REGION>'
                type: object
              schedule:
                description: 'Schedule define interval to synchronize cloud secrets data and kubernetes secrets. Examples of valid schedule: "@every 120s"(every 2 minutes), "@every 1m30s" (every 1 minute and 30 seconds), "@every 10m" (every 10 minutes), "@every 1h" (every hour), "*/5 * * * * *" (every 5 minutes). If empty schedule will be considered disabled and will be synchronized just on creation. [IMPORTANT]: Please mind the interval you have chosen for data synchronization and check Secret Manager pricing details in order to avoid unneeded cloud costs.'
                type: string
              secretName:
                description: Secret name expected to be created into kubernetes with data fetched from Cloud secret manager solution.
                pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                type: string
              suspended:
                description: 'Use this field to suspend cronjob temporarily. Valid values: {true, false}'
                type: boolean
            required:
            - provider
            - providerDataFormat
            - secretName
            type: object
          status:
            description: LinkedSecretStatus defines the observed state of LinkedSecret
            properties:
              createdSecret:
                description: Secret name currently being used.
                type: string
              createdSecretNamespace:
                description: Secret namespace currently being used.
                type: string
              createdSecretStatus:
                description: if "CurrentSecretStatus = Synched" data between cloud provider and kubernetes secret were synchronized. if "CurrentSecretStatus = NotSynched" may have occured an error during synchronization process. Please check linkedsecret events for more details.
                type: string
              cronJobID:
                description: Cronjob current ID. "If CronJobID > 0", job schedule is normal. "If CronJobID = -1", may have occured an error during schedule process, schedule is empty or schedule format is invalid. Please check linkedsecret events for more details.
                type: integer
              cronJobStatus:
                description: Cronjob current status. If "CronJobStatus = Scheduled" job schedule is normal. If "CronJobStatus = NotScheduled" may have occured an error during schedule process, schedule is empty or schedule format is invalid. Please check linkedsecret events for more details.
                type: string
              currentProvider:
                description: Provider name currently being used.
                type: string
              currentProviderOptions:
                additionalProperties:
                  type: string
                description: Provider options currently being used.
                type: object
              currentSchedule:
                description: Cronjob current schedule.
                type: string
              keepSecretOnDelete:
                description: If value is "true" secret wont be deleted after LinkedSecret deletion.
                type: boolean
              lastScheduleExecution:
                description: Last time secret was synchronized.
                format: date-time
                type: string
            required:
            - currentProvider
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: linkedsecrets-controller-manager
  namespace: linkedsecrets-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkedsecrets-leader-election-role
  namespace: linkedsecrets-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: linkedsecrets-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.kubeideas.io
  resources:
  - linkedsecrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.kubeideas.io
  resources:
  - linkedsecrets/finalizers
  verbs:
  - update
- apiGroups:
  - security.kubeideas.io
  resources:
  - linkedsecrets/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkedsecrets-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkedsecrets-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkedsecrets-leader-election-rolebinding
  namespace: linkedsecrets-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: linkedsecrets-leader-election-role
subjects:
- kind: ServiceAccount
  name: linkedsecrets-controller-manager
  namespace: linkedsecrets-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkedsecrets-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkedsecrets-manager-role
subjects:
- kind: ServiceAccount
  name: linkedsecrets-controller-manager
  namespace: linkedsecrets-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkedsecrets-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkedsecrets-proxy-role
subjects:
- kind: ServiceAccount
  name: linkedsecrets-controller-manager
  namespace: linkedsecrets-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: dde0d8ed.kubeideas.io
kind: ConfigMap
metadata:
  name: linkedsecrets-manager-config
  namespace: linkedsecrets-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: linkedsecrets-controller-manager-metrics-service
  namespace: linkedsecrets-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: linkedsecrets-controller-manager
  namespace: linkedsecrets-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_TENANT_ID
              name: azure-credentials
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: AZURE_CLIENT_ID
              name: azure-credentials
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: AZURE_CLIENT_SECRET
              name: azure-credentials
        image: kubeideas/linkedsecrets:v0.6.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: linkedsecrets-controller-manager
      terminationGracePeriodSeconds: 10
